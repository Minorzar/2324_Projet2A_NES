library ieee ;
use ieee.std_logic_1164.all ;
use ieee.numeric_std.all ;

entity CPU_random_control_logic_tb is
end CPU_random_control_logic_tb ;

architecture testbench of CPU_random_control_logic_tb is

	component CPU_random_control_logic
		port(
		
			i_clk							: in STD_LOGIC ;
			i_rdy							: in STD_LOGIC ;
			i_phi1						: in STD_LOGIC ;
			i_phi2						: in STD_LOGIC ;
			i_set_overflow				: in STD_LOGIC ;
			i_dr							: in unsigned(129 downto 0) ; --the decode ROM array
			i_reset						: in STD_LOGIC ;
			i_reset_in_progress		: in STD_LOGIC ;
			i_break_in_progress		: in STD_LOGIC ;
			i_implied_addressing		: in STD_LOGIC ;
			i_two_cycle					: in STD_LOGIC ;
			i_t0							: in STD_LOGIC ;
			i_ir5							: in STD_LOGIC ;
			i_db7							: in STD_LOGIC ;
			i_alu_carry_out			: in STD_LOGIC ;
			i_break_done				: in STD_LOGIC ;
			i_zero_adl0					: in STD_LOGIC ;
			i_p_register				: in STD_LOGIC_VECTOR(7 downto 0) ;
			o_dl_to_db					: out STD_LOGIC ;
			o_dl_to_adl					: out STD_LOGIC ;
			o_dl_to_adh					: out STD_LOGIC ;
			o_O_to_adh0					: out STD_LOGIC ;
			o_O_to_adh1_7				: out STD_LOGIC ;
			o_adh_to_abh				: out STD_LOGIC ;
			o_adl_to_abl				: out STD_LOGIC ;
			o_pcl_to_pcl				: out STD_LOGIC ;
			o_adl_to_pcl				: out STD_LOGIC ;
			o_i_to_pc					: out STD_LOGIC ;
			o_pcl_to_db					: out STD_LOGIC ;
			o_pcl_to_adl				: out STD_LOGIC ;
			o_pch_to_pch				: out STD_LOGIC ;
			o_adh_to_pch				: out STD_LOGIC ;
			b_pch_to_db					: buffer STD_LOGIC ;
			o_pch_to_adh				: out STD_LOGIC ;
			o_sb_to_adh					: out STD_LOGIC ;
			o_sb_to_db					: out STD_LOGIC ;
			o_O_to_adl0					: out STD_LOGIC ;
			o_O_to_adl1					: out STD_LOGIC ;
			o_O_to_adl2					: out STD_LOGIC ;
			o_s_to_adl					: out STD_LOGIC ;
			o_sb_to_s					: out STD_LOGIC ;
			o_s_to_s						: out STD_LOGIC ;
			o_s_to_sb					: out STD_LOGIC ;
			o_db_bar_to_add			: out STD_LOGIC ;
			o_db_to_add					: out STD_LOGIC ;
			o_adl_to_add				: out STD_LOGIC ;
			o_i_to_addc					: out STD_LOGIC ;
			o_sum_select				: out STD_LOGIC ;
			o_and_select				: out STD_LOGIC ;
			o_eor_select				: out STD_LOGIC ;
			o_or_select					: out STD_LOGIC ;
			o_shift_right_select		: out STD_LOGIC ;
			o_add_to_adl				: out STD_LOGIC ;
			o_add_to_sb_0_6			: out STD_LOGIC ;
			o_add_to_sb_7				: out STD_LOGIC ;
			o_O_to_add					: out STD_LOGIC ;
			o_sb_to_add					: out STD_LOGIC ;
			o_sb_to_ac					: out STD_LOGIC ;
			o_ac_to_db					: out STD_LOGIC ;
			o_ac_to_sb					: out STD_LOGIC ;
			o_sb_to_x					: out STD_LOGIC ;
			o_x_to_sb					: out STD_LOGIC ;
			o_sb_to_y					: out STD_LOGIC ;
			o_y_to_sb					: out STD_LOGIC ;
			o_p_to_db					: out STD_LOGIC ;
			o_db0_to_c					: out STD_LOGIC ;
			o_ir5_to_c					: out STD_LOGIC ;
			b_acr_to_c					: buffer STD_LOGIC ;
			o_db1_to_z					: out STD_LOGIC ;
			b_dbz_to_z					: buffer STD_LOGIC ;
			o_db2_to_i					: out STD_LOGIC ;
			o_ir5_to_i					: out STD_LOGIC ;
			o_db3_to_d					: out STD_LOGIC ;
			o_ir5_to_d					: out STD_LOGIC ;
			o_db6_to_v					: out STD_LOGIC ;
			o_avr_to_v					: out STD_LOGIC ;
			o_0_to_v						: out STD_LOGIC ;
			o_1_to_v						: out STD_LOGIC ;
			o_i_to_v						: out STD_LOGIC ;
			o_db7_to_n					: out STD_LOGIC ;
			b_t1_reset					: buffer STD_LOGIC ;
			o_read_write				: out STD_LOGIC
			
		) ;